Answers to Pen- and Paper Exercises, Unit 5, Part 3, CSCI E-10b

Anna Ntenta, anna.ntenta@gmail.com
----------------------------------------------------

Question 1:

public class Prob1 
{
	public static void main (String... args)
	{
		for (int i = args.length - 1; i >= 0; i--)

		System.out.println(args[i]);
	}
}

----------------------------------------------------

Question 2:

The following method will throw a NullPointerException:

import java.util.*;

public class Prob2 
{
	public static void main (String... args)
	{
		ArrayList<String> test = new ArrayList<String>();
		test = null;
		test.size();
	}
}

The NullPointerException is not a checked exception because the program will
compile even if we don't catch it or declare it in the header.



----------------------------------------------------

Question 3:

In the original version, the loop never terminates because we add an element
to the ArrayList on every iteration and i < a.size() also evaluates on every
iteration. We'll never reach the end since the ArrayList grows continuously.

A simple way to fix the loop is to make the starting value of i be the size of the ArrayList minus one and to count "backwards" while adding the new elements:


		for (int i = a.size() - 1; i >= 0 ; i--)
		{
			a.add(i, "NOT");
		}
		
----------------------------------------------------

Question 4:

import java.util.*;
import java.io.*;

public class Prob3 
{
	public static void main (String [] args) {
		Scanner keyboard = new Scanner (System.in);
		int n1, n2;
		double r;
		int retry = 1; 
		while (retry != 0)

		try {
			retry = 0; // if given correct input, end the loop
			System.out.print("Type an int: ");
			n1 = keyboard.nextInt();
			System.out.print("Now type another int: ");
			n2 = keyboard.nextInt();
			r = (double) (n1/n2);
		}
		catch (InputMismatchException e) {
			System.out.println("You didn't type an integer. Please try again.");
	    	keyboard.nextLine(); // flush stream
			retry = 1; // loop back
		}
		catch (ArithmeticException e) {
			System.out.println("You tried to divide by zero. Please try again.");
			keyboard.nextLine(); //flush stream
			retry = 1; // loop back
		}
	}
}

----------------------------------------------------

Question 5:

import java.util.*;

class MyException extends Exception {}
public class ExcExample {

	public static void main (String [] args) {
		String test = args[0];
		System.out.print("t");
		try {
			doRisky (test);
		}
		catch (MyException e) {
			System.out.print("a");
		}
		finally {
			System.out.print("w");
			System.out.println("s");
		}
	}

	static void doRisky (String arg) throws MyException
	{	
		System.out.print("h");
		if ("Obama".equals(arg)) {
			throw new MyException();
		}
		System.out.print("r");
		System.out.print("o");	
	}
}


